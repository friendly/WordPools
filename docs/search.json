[{"path":"https://friendly.github.io/WordPools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Friendly. Author, maintainer. Matthew Dubins. Contributor.","code":""},{"path":"https://friendly.github.io/WordPools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Friendly M (2023). WordPools: Word Pools Used Studies Learning Memory. R package version 1.2.0.","code":"@Manual{,   title = {WordPools: Word Pools Used in Studies of Learning and Memory},   author = {Michael Friendly},   year = {2023},   note = {R package version 1.2.0}, }"},{"path":"https://friendly.github.io/WordPools/index.html","id":"wordpools-","dir":"","previous_headings":"","what":"WordPools","title":"Word Pools Used in Studies of Learning and Memory","text":"Word Pools Used Studies Learning Memory Version: 1.2.0 package collects several classical word pools used often provide lists words psychological studies learning memory. word pool consists population words, together various descriptive measures (number letters, number syllables, word frequency, etc.) normative measures (imagery, concreteness, etc.) can used experimental designs vary control factors. One typical use design experiment stimulus words vary systematically one variables across conditions, variables controlled random selection. uses examine factor structure relations among measures word properties.","code":""},{"path":"https://friendly.github.io/WordPools/index.html","id":"word-pools","dir":"","previous_headings":"WordPools","what":"Word pools","title":"Word Pools Used in Studies of Learning and Memory","text":"following word pools available package: Toronto Word Pool (TWP) - Friendly et al. (1982), contains 1080 words various grammatical classes (nouns, adjectives, verbs), taken originally Thorndike-Lorge (1944) norms) Paivio word pool (Paivio) - Paivio, Yuille & Madigan (1968) word pool contains 925 nouns, together average ratings words imagery, concreteness meaningfulness, along variables Battig - Montague Categorized Word Norms (Battig) - dataset, Battig & Montague (1968) comprises ranked list 5231 words listed 56 taxonomic categories people asked list many exemplars given category. Category Properties (CatProp) - Properties 56 taxonomic categories Battig-Montague category norms published Joelson Hermann (1978)","code":""},{"path":"https://friendly.github.io/WordPools/index.html","id":"selecting-lists","dir":"","previous_headings":"WordPools","what":"Selecting lists","title":"Word Pools Used in Studies of Learning and Memory","text":"simple function, pickList() provided task selecting several random samples words given word pool, restrictions ranges available variables. legacy web app (longer maintained) randomly selecting lists words Paivio word pool provided Friendly (2006) Paivio Word list generator. shiny app randomly selecting lists words Paivio word pool provided Friendly & Dubins (2019a) Paivio Word list generator. similar app selecting lists Toronto Word Pool provided Friendly & Dubins (2019b) Toronto Word Pool list generator.","code":""},{"path":"https://friendly.github.io/WordPools/index.html","id":"installation","dir":"","previous_headings":"WordPools","what":"Installation","title":"Word Pools Used in Studies of Learning and Memory","text":"Install current released version CRAN:","code":"install.packages(\"WordPools\")"},{"path":[]},{"path":"https://friendly.github.io/WordPools/index.html","id":"using-picklist","dir":"","previous_headings":"WordPools > Examples","what":"Using `pickList()","title":"Word Pools Used in Studies of Learning and Memory","text":"Select two lists items 5 items Paivio pool: Using list ranges imagery concreteness: Define ranges low high imagery, concreteness, meaningfulness go low - median, median-high variable Select two lists 10 low/high imagery items:","code":"set.seed(42)     # for reproducibility pickList(Paivio, nitems=5, nlists=2) #>     list itmno          word imagery concreteness meaningfulness frequency syl letters freerecall #> 578    1   578 misconception    2.30         1.79           3.96         1   4      13      0.531 #> 333    1   333          flag    6.60         6.94           6.54        50   1       4      0.219 #> 159    1   159     christmas    6.70         4.53           8.76        50   2       9      0.563 #> 78     1    78      basement    6.03         6.83           6.83         8   2       8      0.500 #> 238    1   238   destruction    5.27         3.61           5.32        37   3      11      0.469 #> 152    2   152         charm    4.70         2.17           6.13        50   1       5      0.219 #> 654    2   654     performer    5.43         6.01           6.48         4   3       9      0.344 #> 52     2    52         arrow    6.57         7.00           6.80        37   2       5      0.313 #> 133    2   133      capacity    3.40         2.41           5.44        37   4       8      0.094 #> 315    2   315      facility    2.73         2.20           4.64        23   3       8      0.281 L <- list(imagery=c(1,5),            concreteness=c(1,4)) pickList(Paivio, ranges =L, nitems=4) #>     list itmno       word imagery concreteness meaningfulness frequency syl letters freerecall #> 57     1    57   atrocity    3.67         2.38           4.17         2   4       8      0.469 #> 281    1   281     effort    3.33         2.22           5.75       100   2       6      0.281 #> 457    1   457 inducement    2.93         2.34           3.68         3   3      10      0.406 #> 316    1   316       fact    2.20         3.31           4.29       100   1       4      0.438 vars <- 3:5 (low <- as.data.frame(apply(Paivio[,vars], 2, fivenum))[c(1,3),]) #>   imagery concreteness meaningfulness #> 1    1.63         1.18           1.92 #> 3    5.17         5.72           5.92 (high <- as.data.frame(apply(Paivio[,vars], 2, fivenum))[c(3,5),]) #>   imagery concreteness meaningfulness #> 3    5.17         5.72           5.92 #> 5    6.90         7.70           9.22 lowI <- pickList(Paivio, low[,\"imagery\", drop=FALSE], nitems=10, nl=2) highI <- pickList(Paivio, high[,\"imagery\", drop=FALSE], nitems=10, nl=2)   # compare means colMeans(lowI[,c(4:8)]) #>        imagery   concreteness meaningfulness      frequency            syl  #>          3.783          3.416          5.232         39.000          2.400 colMeans(highI[,c(4:8)]) #>        imagery   concreteness meaningfulness      frequency            syl  #>          6.161          6.301          6.702         35.300          1.900"},{"path":"https://friendly.github.io/WordPools/index.html","id":"using-dplyr","dir":"","previous_headings":"WordPools > Examples","what":"Using dplyr","title":"Word Pools Used in Studies of Learning and Memory","text":"dplyr package makes easy select items meeting arbitrary criteria. filter() ranges three variables TWP get reduced pool: , draw two random lists:","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union selected <- TWP |>       filter( canadian == 0) |>              # remove Canadian spellings     filter( imagery <= 5, concreteness <= 4, frequency <= 30) |>     select(word, imagery:frequency ) str(selected) #> 'data.frame':    269 obs. of  5 variables: #>  $ word        : chr  \"abide\" \"absorb\" \"abuse\" \"accord\" ... #>  $ imagery     : num  2 4.6 4.5 1.8 4.2 2.1 3.7 3.2 3.3 1.6 ... #>  $ concreteness: num  2.8 3.6 3.4 2.6 3.5 3.6 3 3.9 3.5 2 ... #>  $ letters     : int  5 6 5 6 6 8 6 5 6 4 ... #>  $ frequency   : int  7 13 18 9 10 3 10 13 10 10 ... nitems <- 5   nlists <- 2   lists <- selected |>     sample_n( nitems*nlists, replace=FALSE) |>     mutate(list = rep(1:nlists, each=nitems))      str(lists) #> 'data.frame':    10 obs. of  6 variables: #>  $ word        : chr  \"virtue\" \"gravely\" \"abuse\" \"upward\" ... #>  $ imagery     : num  3.1 2.1 4.5 4 4.6 5 4.4 4.2 3.1 3.5 #>  $ concreteness: num  2.1 2.8 3.4 4 3.9 3.3 3.1 3.5 3.2 2.8 #>  $ letters     : int  6 7 5 6 7 6 8 6 6 4 #>  $ frequency   : int  30 7 18 27 24 17 24 10 13 7 #>  $ list        : int  1 1 1 1 1 2 2 2 2 2   lists |> knitr::kable()"},{"path":"https://friendly.github.io/WordPools/index.html","id":"density-plots","dir":"","previous_headings":"WordPools > Examples","what":"Density plots","title":"Word Pools Used in Studies of Learning and Memory","text":"simple function gives density plot variable. ’s interesting two bimodal.","code":"plotDensity(TWP, \"imagery\") plotDensity(TWP, \"concreteness\")"},{"path":"https://friendly.github.io/WordPools/index.html","id":"references","dir":"","previous_headings":"WordPools","what":"References","title":"Word Pools Used in Studies of Learning and Memory","text":"Paivio, ., Yuille, J.C. & Madigan S. Concreteness, imagery meaningfulness 925 nouns. (1968) Journal Experimental Psychology, Monograph Supplement, 76, .1, pt.2. Battig, W.F. & Montague, W.E. (1969). Category norms verbal items 56 categories: replication extension Connecticut norms. Journal Experimental Psychology, 80 (1969), pp. 1-46 Friendly, M. (2006) Paivio Word list generator Friendly, M. & Dubins, M. (2019a) Paivio Word list generator, Online application. Friendly, M. & Dubins, M. (2019b) Toronto Word Pool list generator, Online application. Friendly, M., Franklin, P., Hoffman, D. & Rubin, D. Toronto Word Pool, Behavior Research Methods Instrumentation, 1982, 14(4), 375-399. TWP paper PDF","code":""},{"path":"https://friendly.github.io/WordPools/reference/Battig.html","id":null,"dir":"Reference","previous_headings":"","what":"Battig - Montague Categorized Word Norms — Battig","title":"Battig - Montague Categorized Word Norms — Battig","text":"dataset comprises ranked list 5231 words listed 56 taxonomic categories people asked list many exemplars given category (\"precious stone\", \"unit time\", \"fruit\", \"color\", etc.). Participants 30s generate many responses category possible,  time next category name presented. Included dataset words Battig Montague (1969) norms listed freq > 1.","code":""},{"path":"https://friendly.github.io/WordPools/reference/Battig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Battig - Montague Categorized Word Norms — Battig","text":"","code":"data(Battig)"},{"path":"https://friendly.github.io/WordPools/reference/Battig.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Battig - Montague Categorized Word Norms — Battig","text":"data frame 5231 observations following 9 variables. word character vector catnum category number, factor catname category name, factor syl number syllables letters number letters freq Frequency response frequency Kucera-Francis word frequency rank rank freq within category rfreq rated frequency","code":""},{"path":"https://friendly.github.io/WordPools/reference/Battig.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Battig - Montague Categorized Word Norms — Battig","text":"original dataset, words truncated 18 characters,  incomplete.","code":""},{"path":"https://friendly.github.io/WordPools/reference/Battig.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Battig - Montague Categorized Word Norms — Battig","text":"Battig, W.F.  & Montague, W.E. (1968).     Category norms verbal items 56 categories: replication extension Connecticut norms using      University Maryland Illinois students (Tech. Rep.)     University Colorado, Boulder, CO (1968) Battig, W.F.  & Montague, W.E. (1969).     Category norms verbal items 56 categories: replication extension Connecticut norms.     Journal Experimental Psychology, 80 (1969), pp. 1-46","code":""},{"path":"https://friendly.github.io/WordPools/reference/Battig.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Battig - Montague Categorized Word Norms — Battig","text":"Joelson, J. M. & Hermann, D. J., Properties categories semantic |       memory, Amer Journal Psychology, 1978, 91, 101-114.","code":""},{"path":"https://friendly.github.io/WordPools/reference/Battig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Battig - Montague Categorized Word Norms — Battig","text":"","code":"data(Battig) ## maybe str(Battig) ; plot(Battig) ...  # select items from several categories cats <- c(\"fish\", \"bird\", \"flower\", \"tree\") for (c in cats) {   cat(\"\\nCategory:\", c, \"\\n\")     print(pickList(subset(Battig, catname==c), nitems=5)) } #>  #> Category: fish  #>      list     word catnum catname syl letters freq frequency rank rfreq #> 4635    1     shad     52    fish   1       4   26         0   28  3.65 #> 4623    1     carp     52    fish   1       4   61         0   16  3.14 #> 4609    1     bass     52    fish   1       4  195        16    2  3.81 #> 4631    1 bluefish     52    fish   2       8   30         1   24  5.11 #> 4638    1  haddock     52    fish   2       7   22         1   31  2.88 #>  #> Category: bird  #>      list      word catnum catname syl letters freq frequency rank rfreq #> 2991    1   chicken     37    bird   2       7   40        37   21  6.00 #> 2998    1    falcon     37    bird   2       6   28         4   28  4.00 #> 2979    1 parrakeet     37    bird   3       9  115         1    9  4.61 #> 3001    1     finch     37    bird   1       5   20         0   31  5.10 #> 3000    1  pheasant     37    bird   2       8   22         1   30  5.10 #>  #> Category: flower  #>      list      word catnum catname syl letters freq frequency rank rfreq #> 4239    1     pansy     48  flower   2       5  108         6    9  3.70 #> 4245    1     lilac     48  flower   2       5   45         4   15  5.22 #> 4257    1 buttercup     48  flower   3       9   17         0   27  5.46 #> 4262    1     aster     48  flower   2       5   12         1   32  6.60 #> 4258    1  marigold     48  flower   3       8   17         0   28  5.00 #>  #> Category: tree  #>      list           word catnum catname syl letters freq frequency rank rfreq #> 4406    1           pine     50    tree   1       4  214        14    3  3.97 #> 4434    1     cottonwood     50    tree   3      10   14         0   31  3.50 #> 4438    1          holly     50    tree   2       5   11         0   35  4.36 #> 4413    1        redwood     50    tree   2       7   71         2   10  4.78 #> 4415    1 weeping willow     50    tree   4      13   67         0   12  4.79  # or, using sapply(): sapply(cats, function(c) pickList(subset(Battig, catname==c), nitems=5), simplify=FALSE) #> $fish #>      list     word catnum catname syl letters freq frequency rank rfreq #> 4654    1  piranha     52    fish   3       7   10         0   47  5.33 #> 4616    1 goldfish     52    fish   2       8  127         1    9  3.77 #> 4619    1    whale     52    fish   1       5   78         0   12  4.58 #> 4636    1     spot     52    fish   1       4   25        57   29  5.04 #> 4623    1     carp     52    fish   1       4   61         0   16  3.14 #>  #> $bird #>      list      word catnum catname syl letters freq frequency rank rfreq #> 3015    1 chickadee     37    bird   3       9   11         0   45  7.00 #> 2990    1   swallow     37    bird   2       7   41        10   20  4.64 #> 2978    1    canary     37    bird   3       6  134         0    8  4.03 #> 2983    1    oriole     37    bird   3       6   77        11   13  3.19 #> 3001    1     finch     37    bird   1       5   20         0   31  5.10 #>  #> $flower #>      list               word catnum catname syl letters freq frequency rank #> 4242    1           daffodil     48  flower   3       8   87         1   12 #> 4264    1           camellia     48  flower   3       8   10         1   34 #> 4251    1 lily-of-the-valley     48  flower   6      15   29         0   21 #> 4239    1              pansy     48  flower   2       5  108         6    9 #> 4257    1          buttercup     48  flower   3       9   17         0   27 #>      rfreq #> 4242  3.91 #> 4264  2.88 #> 4251  5.27 #> 4239  3.70 #> 4257  5.46 #>  #> $tree #>      list       word catnum catname syl letters freq frequency rank rfreq #> 4425    1      cedar     50    tree   2       5   37         1   22  5.14 #> 4434    1 cottonwood     50    tree   3      10   14         0   31  3.50 #> 4429    1     orange     50    tree   2       6   29        23   26  7.72 #> 4411    1    dogwood     50    tree   2       7   84         1    8  4.89 #> 4420    1   sycamore     50    tree   3       8   46         0   17  4.39 #>"},{"path":"https://friendly.github.io/WordPools/reference/CatProp.html","id":null,"dir":"Reference","previous_headings":"","what":"Joelson-Hermann Category Properties — CatProp","title":"Joelson-Hermann Category Properties — CatProp","text":"Properties 56 taxonomic categories Battig-Montague category norms published Joelson Hermann (1978).","code":""},{"path":"https://friendly.github.io/WordPools/reference/CatProp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Joelson-Hermann Category Properties — CatProp","text":"","code":"data(CatProp)"},{"path":"https://friendly.github.io/WordPools/reference/CatProp.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Joelson-Hermann Category Properties — CatProp","text":"data frame 56 observations following 24 variables. catnum Category number, numeric variable catname Category name, character variable rnatrl Rated naturalness 1..7, numeric variable rfamil Rated familiarity 1..7, numeric variable rmeang Rated meaningfulness 1..7 (Hunt & Hodge, 1971), numeric variable rfreq Rated frequency 1..7 B&M, numeric variable genfreq Generated category label frequency, numeric variable rageoaq Rated age acquisition 1..10, numeric variable rsize Estimated category size, numeric variable ts_30 Mean # types produced 30 seconds, numeric variable rclasm Recall asymptote, numeric variable rclrate Recall rate parameter, numeric variable tas Types across subjects, numeric variable cortas Corrected types across subjects, numeric variable ntf # types produced first, numeric variable nmngox # dictionary meanings (Oxford), numeric variable nmngam # dictionary meanings (. Heritage), numeric variable catfreqp category label K-F frequency, numeric variable rabcon Rated abstract-concreteness 1..7, numeric variable rvagprc Rated vague-precise 1..7, numeric variable exfreqp Avg exemplar log K-F frequency, numeric variable intsam Intersample correlation, numeric variable maxfreq Maximum response frequency, numeric variable pagmt Percent agreement category membership, numeric variable","code":""},{"path":"https://friendly.github.io/WordPools/reference/CatProp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Joelson-Hermann Category Properties — CatProp","text":"Includes data 56 Battig-Montague categories  preprint  Joelson-Hermann paper Values catfreqp added categories 3, 4, 8, 15, 24, 27, 32, 46, 47 & 56 Kucera-Francis norms, ignoring \"part \", \"unit \", taking max labels connected \"\".","code":""},{"path":"https://friendly.github.io/WordPools/reference/CatProp.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Joelson-Hermann Category Properties — CatProp","text":"Joelson, J. M. & Hermann, D. J. , Properties categories semantic memory, American Journal Psychology, 1978, 91, 101-114.","code":""},{"path":"https://friendly.github.io/WordPools/reference/CatProp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Joelson-Hermann Category Properties — CatProp","text":"","code":"data(CatProp) summary(CatProp) #>      catnum                        catname       rnatrl          rfamil      #>  1      : 1   alcoholic beverage       : 1   Min.   :3.090   Min.   :3.890   #>  2      : 1   article of clothing      : 1   1st Qu.:4.088   1st Qu.:4.640   #>  3      : 1   article of furniture     : 1   Median :4.875   Median :5.265   #>  4      : 1   bird                     : 1   Mean   :4.809   Mean   :5.224   #>  5      : 1   bldg for religious servic: 1   3rd Qu.:5.505   3rd Qu.:5.885   #>  6      : 1   carpenters tool          : 1   Max.   :6.250   Max.   :6.510   #>  (Other):50   (Other)                  :50                                   #>      rmeang          rfreq          genfreq          rageoaq      #>  Min.   :3.100   Min.   :3.530   Min.   :  0.00   Min.   :2.020   #>  1st Qu.:3.560   1st Qu.:4.312   1st Qu.:  1.00   1st Qu.:4.450   #>  Median :3.920   Median :4.765   Median :  9.50   Median :5.405   #>  Mean   :3.912   Mean   :4.846   Mean   : 19.54   Mean   :5.243   #>  3rd Qu.:4.205   3rd Qu.:5.447   3rd Qu.: 30.25   3rd Qu.:6.077   #>  Max.   :4.550   Max.   :6.110   Max.   :150.00   Max.   :8.060   #>  NA's   :25                                                       #>      rsize           ts_30            rclasm         rclrate         #>  Min.   : 6.98   Min.   : 4.400   Min.   : 9.80   Min.   :0.005140   #>  1st Qu.:11.34   1st Qu.: 5.957   1st Qu.:19.05   1st Qu.:0.009155   #>  Median :16.81   Median : 6.780   Median :22.30   Median :0.013315   #>  Mean   :22.19   Mean   : 6.993   Mean   :28.75   Mean   :0.013471   #>  3rd Qu.:22.23   3rd Qu.: 7.388   3rd Qu.:32.33   3rd Qu.:0.016228   #>  Max.   :73.97   Max.   :11.340   Max.   :62.30   Max.   :0.032430   #>                                   NA's   :28      NA's   :28         #>       tas            cortas            ntf             nmngox      #>  Min.   : 61.0   Min.   : 20.00   Min.   : 10.00   Min.   : 0.00   #>  1st Qu.:114.5   1st Qu.: 58.25   1st Qu.: 23.50   1st Qu.: 6.00   #>  Median :161.0   Median : 98.50   Median : 30.50   Median :12.00   #>  Mean   :172.4   Mean   :112.20   Mean   : 35.77   Mean   :13.50   #>  3rd Qu.:184.2   3rd Qu.:125.50   3rd Qu.: 47.25   3rd Qu.:17.75   #>  Max.   :486.0   Max.   :400.00   Max.   :104.00   Max.   :49.00   #>                                                    NA's   :26      #>      nmngam        catfreqp         rabcon         rvagprc         exfreqp      #>  Min.   : 1.0   Min.   :  0.0   Min.   :3.260   Min.   :3.550   Min.   :0.420   #>  1st Qu.: 4.0   1st Qu.: 43.0   1st Qu.:4.765   1st Qu.:4.428   1st Qu.:1.260   #>  Median : 7.0   Median : 88.0   Median :5.595   Median :5.030   Median :1.910   #>  Mean   : 7.2   Mean   :150.1   Mean   :5.366   Mean   :4.938   Mean   :1.928   #>  3rd Qu.:10.0   3rd Qu.:192.0   3rd Qu.:6.058   3rd Qu.:5.412   3rd Qu.:2.542   #>  Max.   :27.0   Max.   :808.0   Max.   :6.630   Max.   :6.000   Max.   :3.900   #>  NA's   :26     NA's   :15                                                      #>      intsam          maxfreq          pagmt        #>  Min.   :0.0970   Min.   : 40.0   Min.   : 59.00   #>  1st Qu.:0.9477   1st Qu.:127.8   1st Qu.: 80.75   #>  Median :0.9665   Median :189.5   Median : 86.00   #>  Mean   :0.9265   Mean   :193.1   Mean   : 85.70   #>  3rd Qu.:0.9842   3rd Qu.:242.0   3rd Qu.: 92.25   #>  Max.   :0.9970   Max.   :387.0   Max.   :100.00   #>                                                    plot(CatProp[,3:10])   # try a biplot CP <- CatProp rownames(CP) <- CP$catname biplot(prcomp(na.omit(CP[,3:12]), scale=TRUE))   # select some categories where the rated age of acquisition is between 2-4 cats <- pickList(CatProp, list(rageoaq=c(2,4))) cats[,2:9] #>    catnum             catname rnatrl rfamil rmeang rfreq genfreq rageoaq #> 41     41                 toy   4.84   5.67     NA  5.10       7    2.02 #> 48     48              flower   5.61   5.17   3.95  4.36      34    3.44 #> 10     10               color   6.15   6.21   4.44  5.89      64    2.87 #> 16     16               fruit   6.03   5.74   3.92  5.39      37    3.63 #> 8       8  four-footed animal   5.10   5.31     NA  5.75       7    3.94 #> 37     37                bird   5.21   4.90   3.56  4.65      23    3.57 #> 47     47    males first name   5.21   6.43   4.33  6.07      12    3.66 #> 52     52                fish   4.70   4.62   3.55  4.25      23    3.98 #> 31     31 article of clothing   5.95   6.18   4.55  5.62     150    3.80 #> 50     50                tree   5.67   5.21   3.85  4.41      78    3.54  # pick some fruit pickList(subset(Battig, catname==\"fruit\")) #>      list       word catnum catname syl letters freq frequency rank rfreq #> 1057    1     raisin     16   fruit   2       6   16         1   26  6.83 #> 1040    1 grapefruit     16   fruit   2      10  154         3    9  6.25 #> 1038    1     cherry     16   fruit   2       6  183         6    7  5.41 #> 1049    1     prunes     16   fruit   1       6   44         1   18  7.33 #> 1045    1       lime     16   fruit   1       4   69        13   14  6.81 #> 1037    1      grape     16   fruit   1       5  247         3    6  5.28 #> 1046    1     tomato     16   fruit   3       6   63         4   15  5.00 #> 1035    1     banana     16   fruit   3       6  283         4    4  4.38 #> 1051    1  raspberry     16   fruit   9       3   28         1   20  6.69 #> 1059    1  nectarine     16   fruit   3       9   12         0   28  9.17"},{"path":"https://friendly.github.io/WordPools/reference/Paivio.html","id":null,"dir":"Reference","previous_headings":"","what":"Paivio, Yuille & Madigan Word Pool — Paivio","title":"Paivio, Yuille & Madigan Word Pool — Paivio","text":"Paivio, Yuille & Madigan (1968) word pool contains 925 nouns, together average ratings words imagery, concreteness meaningfulness, along  variables.","code":""},{"path":"https://friendly.github.io/WordPools/reference/Paivio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paivio, Yuille & Madigan Word Pool — Paivio","text":"","code":"data(Paivio)"},{"path":"https://friendly.github.io/WordPools/reference/Paivio.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Paivio, Yuille & Madigan Word Pool — Paivio","text":"data frame 925 observations following 9 variables. itmno item number word word imagery imagery rating concreteness concreteness rating meaningfulness meaningfulness rating frequency word frequency, Kucera-Francis norms syl number syllables letters number letters freerecall Free recall proportion, added Christian et al (1978)","code":""},{"path":"https://friendly.github.io/WordPools/reference/Paivio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Paivio, Yuille & Madigan Word Pool — Paivio","text":"freerecall variable 27 NAs.","code":""},{"path":"https://friendly.github.io/WordPools/reference/Paivio.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Paivio, Yuille & Madigan Word Pool — Paivio","text":"Paivio, ., Yuille, J.C. & Madigan S. Concreteness, imagery meaningfulness 925 nouns.  Journal Experimental Psychology, Monograph Supplement, 1968, 76, .1, pt.2. Christian, J., Bickley, W., Tarka, M., & Clayton, K. (1978). Measures free recall 900 English nouns: Correlations imagery, concreteness, meaningfulness, frequency. Memory & Cognition, 6, 379-390.","code":""},{"path":"https://friendly.github.io/WordPools/reference/Paivio.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Paivio, Yuille & Madigan Word Pool — Paivio","text":"Kucera Francis, W.N. (1967).  Computational Analysis Present-Day American English. Providence: Brown University Press. Rubin, D. C. & Friendly, M. (1986). Predicting words get recalled: Measures free recall, availability, goodness, emotionality, pronunciability 925 nouns. Memory Cognition, 14, 79-94.","code":""},{"path":"https://friendly.github.io/WordPools/reference/Paivio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Paivio, Yuille & Madigan Word Pool — Paivio","text":"","code":"data(Paivio) summary(Paivio) #>      itmno         word              imagery       concreteness   #>  Min.   :  1   Length:925         Min.   :1.630   Min.   :1.180   #>  1st Qu.:232   Class :character   1st Qu.:3.800   1st Qu.:3.110   #>  Median :463   Mode  :character   Median :5.170   Median :5.720   #>  Mean   :463                      Mean   :4.968   Mean   :4.956   #>  3rd Qu.:694                      3rd Qu.:6.270   3rd Qu.:6.690   #>  Max.   :925                      Max.   :6.900   Max.   :7.700   #>                                                                   #>  meaningfulness    frequency           syl           letters      #>  Min.   :1.920   Min.   :  0.00   Min.   :1.000   Min.   : 3.00   #>  1st Qu.:5.220   1st Qu.:  4.00   1st Qu.:2.000   1st Qu.: 5.00   #>  Median :5.920   Median : 21.00   Median :2.000   Median : 7.00   #>  Mean   :5.892   Mean   : 31.89   Mean   :2.278   Mean   : 6.91   #>  3rd Qu.:6.640   3rd Qu.: 50.00   3rd Qu.:3.000   3rd Qu.: 8.00   #>  Max.   :9.220   Max.   :100.00   Max.   :5.000   Max.   :14.00   #>                                                                   #>    freerecall     #>  Min.   :0.0620   #>  1st Qu.:0.2810   #>  Median :0.4060   #>  Mean   :0.3979   #>  3rd Qu.:0.5000   #>  Max.   :0.8440   #>  NA's   :27       plot(Paivio[,c(3:5,9)])   # density plots  plotDensity(Paivio, \"imagery\")  plotDensity(Paivio, \"concreteness\")  plotDensity(Paivio, \"meaningfulness\")  plotDensity(Paivio, \"frequency\")  plotDensity(Paivio, \"syl\")  plotDensity(Paivio, \"letters\")  plotDensity(Paivio, \"freerecall\")     # find ranges & 5 num summaries ranges <- as.data.frame(apply(Paivio[,-(1:2)], 2, function(x) range(na.omit(x)))) rownames(ranges) <- c(\"min\", \"max\") ranges #>     imagery concreteness meaningfulness frequency syl letters freerecall #> min    1.63         1.18           1.92         0   1       3      0.062 #> max    6.90         7.70           9.22       100   5      14      0.844  P5num <- as.data.frame(apply(Paivio[,3:5], 2, fivenum)) rownames(P5num) <- c(\"min\", \"Q1\", \"med\", \"Q3\", \"max\") P5num #>     imagery concreteness meaningfulness #> min    1.63         1.18           1.92 #> Q1     3.80         3.11           5.22 #> med    5.17         5.72           5.92 #> Q3     6.27         6.69           6.64 #> max    6.90         7.70           9.22"},{"path":"https://friendly.github.io/WordPools/reference/pickList.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Items from a Word Pool in Given Ranges — pickList","title":"Select Items from a Word Pool in Given Ranges — pickList","text":"convenience function provide capability  select items given word pool, restrictions range numeric variables.","code":""},{"path":"https://friendly.github.io/WordPools/reference/pickList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Items from a Word Pool in Given Ranges — pickList","text":"","code":"pickList(data, ranges, nitems = 10, nlists = 1, replace = FALSE)"},{"path":"https://friendly.github.io/WordPools/reference/pickList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Items from a Word Pool in Given Ranges — pickList","text":"data data.frame, typically word list like Paivio TWP ranges data.frame two rows, column names corresponding subset column names  data.  two rows give minimum maximum values, respectively, variables data.  Alternatively, can supply named list containing minimum maximum  values one variables data. nitems Number items per list nlists Number lists replace logical value, indicating whether sampling items (rows) data allow  sampling replacement.","code":""},{"path":"https://friendly.github.io/WordPools/reference/pickList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Items from a Word Pool in Given Ranges — pickList","text":"data frame shape data containing selected items prefixed         list number.","code":""},{"path":"https://friendly.github.io/WordPools/reference/pickList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Select Items from a Word Pool in Given Ranges — pickList","text":"sample generate error fewer nitems * nlists items  within specified ranges replace=FALSE.","code":""},{"path":"https://friendly.github.io/WordPools/reference/pickList.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Select Items from a Word Pool in Given Ranges — pickList","text":"related word list generator: Friendly, M. Word list generator. http://datavis.ca/online/paivio/","code":""},{"path":[]},{"path":"https://friendly.github.io/WordPools/reference/pickList.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Select Items from a Word Pool in Given Ranges — pickList","text":"Michael Friendly","code":""},{"path":"https://friendly.github.io/WordPools/reference/pickList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Items from a Word Pool in Given Ranges — pickList","text":"","code":"data(Paivio) # 2 lists, no selection on any variables pickList(Paivio, nlists=2) #>     list itmno        word imagery concreteness meaningfulness frequency syl #> 106    1   106     boulder    6.13         6.96           5.88        50   2 #> 9      1     9       abyss    5.17         5.40           5.88         5   2 #> 426    1   426   honeycomb    6.23         6.50           5.78         4   3 #> 322    1   322     fatigue    5.07         4.28           3.88        19   2 #> 810    1   810       stone    6.23         6.96           7.24       100   1 #> 617    1   617    occasion    2.53         3.22           5.00        50   3 #> 131    1   131       candy    6.63         6.56           6.39        32   2 #> 719    1   719 recognition    3.60         2.00           5.04        21   4 #> 862    1   862     tribute    3.57         3.12           5.52        22   2 #> 626    1   626   orchestra    6.77         6.55           6.76        10   3 #> 386    2   386        golf    6.70         6.10           8.16        26   1 #> 714    2   714    railroad    6.27         6.76           6.60       100   2 #> 820    2   820  substitute    3.13         4.56           4.48        29   3 #> 158    2   158    chloride    4.20         6.28           5.75         2   2 #> 346    2   346        fork    6.57         6.94           7.08        31   1 #> 536    2   536        lord    4.63         4.18           6.68       100   1 #> 610    2   610         nun    6.67         6.76           6.60         9   1 #> 420    2   420    hillside    6.30         6.59           6.92        20   2 #> 486    2   486    jealousy    4.72         1.77           4.88        17   3 #> 301    2   301  evangelist    4.97         5.95           5.28         2   4 #>     letters freerecall #> 106       7      0.500 #> 9         5      0.438 #> 426       9      0.281 #> 322       7      0.438 #> 810       5      0.531 #> 617       8      0.219 #> 131       5      0.500 #> 719      11      0.500 #> 862       7      0.281 #> 626       9      0.344 #> 386       4      0.469 #> 714       8      0.313 #> 820      10      0.125 #> 158       8      0.281 #> 346       4      0.469 #> 536       4      0.750 #> 610       3      0.563 #> 420       8      0.656 #> 486       8      0.438 #> 301      10      0.625  # Define ranges for low and high on imagery, concreteness, meaningfulness # These go from low - median, and median-high on each variable vars <- 3:5 (low <- as.data.frame(apply(Paivio[,vars], 2, fivenum))[c(1,3),]) #>   imagery concreteness meaningfulness #> 1    1.63         1.18           1.92 #> 3    5.17         5.72           5.92 (high <- as.data.frame(apply(Paivio[,vars], 2, fivenum))[c(3,5),]) #>   imagery concreteness meaningfulness #> 3    5.17         5.72           5.92 #> 5    6.90         7.70           9.22  # select two lists of 10 low/high imagery items lowI <- pickList(Paivio, low[,\"imagery\", drop=FALSE], nitems=10, nl=2) highI <- pickList(Paivio, high[,\"imagery\", drop=FALSE], nitems=10, nl=2)  # compare means colMeans(lowI[,c(4:8)]) #>        imagery   concreteness meaningfulness      frequency            syl  #>         3.7575         3.4060         5.3955        15.9000         2.6500  colMeans(highI[,c(4:8)]) #>        imagery   concreteness meaningfulness      frequency            syl  #>         5.9585         6.3710         6.5700        38.1000         1.9000   # using a list of ranges L <- list(imagery=c(1,5), concreteness=c(1,4)) pickList(Paivio, L) #>     list itmno         word imagery concreteness meaningfulness frequency syl #> 880    1   880       upkeep    3.07         2.50           4.76         2   2 #> 710    1   710     quantity    3.47         3.32           4.17        50   3 #> 865    1   865      trouble    3.53         2.25           5.08       100   2 #> 413    1   413      hearing    3.77         3.57           6.64        13   2 #> 763    1   763       series    4.47         3.88           5.36        50   2 #> 885    1   885       vanity    3.83         1.77           4.92        20   3 #> 689    1   689     prestige    3.67         1.73           4.56         7   2 #> 575    1   575      miracle    3.33         2.25           5.60        24   3 #> 414    1   414       heaven    4.13         2.75           6.52       100   2 #> 195    1   195 contribution    3.67         3.33           5.44        19   4 #>     letters freerecall #> 880       6      0.281 #> 710       8      0.313 #> 865       7      0.250 #> 413       7      0.156 #> 763       6      0.281 #> 885       6      0.344 #> 689       8      0.188 #> 575       7      0.188 #> 414       6      0.656 #> 195      12      0.125"},{"path":"https://friendly.github.io/WordPools/reference/plotDensity.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced density plot for WordPools — plotDensity","title":"Enhanced density plot for WordPools — plotDensity","text":"Plots distribution variable density estimate rug plot","code":""},{"path":"https://friendly.github.io/WordPools/reference/plotDensity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced density plot for WordPools — plotDensity","text":"","code":"plotDensity(   data,   var,   adjust = 1,   lwd = 2,   fill = rgb(1, 0, 0, 0.2),   xlab = NULL,   main = NULL,   anno = FALSE,   ... )"},{"path":"https://friendly.github.io/WordPools/reference/plotDensity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced density plot for WordPools — plotDensity","text":"data data.frame var Name variable plotted adjust Adjustment factor bandwidth density estimate lwd line width fill Color fill area density estimate xlab Label variable main Title plot anno TRUE ... arguments passed plot.density","code":""},{"path":"https://friendly.github.io/WordPools/reference/plotDensity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enhanced density plot for WordPools — plotDensity","text":"Returns result density","code":""},{"path":"https://friendly.github.io/WordPools/reference/plotDensity.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Enhanced density plot for WordPools — plotDensity","text":"","code":"plotDensity(Paivio, \"imagery\", anno=TRUE)  plotDensity(Paivio, \"imagery\", anno=TRUE, adjust=1.5)  plotDensity(Paivio, \"syl\")   plotDensity(TWP, \"imagery\", anno=TRUE)"},{"path":"https://friendly.github.io/WordPools/reference/TWP.html","id":null,"dir":"Reference","previous_headings":"","what":"The Toronto Word Pool — TWP","title":"The Toronto Word Pool — TWP","text":"Toronto Word Pool consists 1080 words various grammatical classes together variety normative variables. TWP contains high frequency nouns, adjectives, verbs taken  originally Thorndike-Lorge (1944) norms.  word pool used hundreds studies Toronto elsewhere.","code":""},{"path":"https://friendly.github.io/WordPools/reference/TWP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Toronto Word Pool — TWP","text":"","code":"data(TWP)"},{"path":"https://friendly.github.io/WordPools/reference/TWP.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The Toronto Word Pool — TWP","text":"data frame 1093 observations following 12 variables. itmno item number word word imagery imagery rating concreteness concreteness rating letters number letters frequency word frequency, Kucera-Francis norms foa measure first order approximation English.      first-order approximation, probability \t\tgenerating string letters based frequencies \t\toccurrence individual letters language. soa measure second order approximation English, based bigram frequencies. onr Orthographic neighbor ratio, taken \t\tLandauer Streeter (1973). ratio frequency \t\tword Kucera Francis (1967) count divided sum \t\tfrequencies orthographic neighbors. dictcode dictionary codes, factor indicating      \tcollection grammatical classes, 1-5, given word form noun percent noun usage. Words considered unambiguous based dictcode     \tlisted 0 100; items rated judgment task. canadian factor indicating alternative Canadian spelling given word","code":""},{"path":"https://friendly.github.io/WordPools/reference/TWP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The Toronto Word Pool — TWP","text":"last 13 words list alternative Canadian spellings words listed earlier, duplicate itmno values.","code":""},{"path":"https://friendly.github.io/WordPools/reference/TWP.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The Toronto Word Pool — TWP","text":"Friendly, M., Franklin, P., Hoffman, D. & Rubin, D. Toronto Word Pool, Behavior Research Methods Instrumentation, 1982, 14(4), 375-399. http://datavis.ca/papers/twp.pdf.","code":""},{"path":"https://friendly.github.io/WordPools/reference/TWP.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The Toronto Word Pool — TWP","text":"Kucera Francis, W.N. (1967).  Computational Analysis Present-Day American English. Providence: Brown University Press. Landauer, T. K., & Streeter, L. .  Structural differences common rare words: Failure equivalent assumptions theories word recognition. Journal Verbal Learning Verbal Behavior, 1973, 11, 119-131.","code":""},{"path":"https://friendly.github.io/WordPools/reference/TWP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Toronto Word Pool — TWP","text":"","code":"data(TWP) str(TWP) #> 'data.frame':\t1093 obs. of  12 variables: #>  $ itmno       : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ word        : chr  \"abide\" \"able\" \"aboard\" \"about\" ... #>  $ imagery     : num  2 2.7 3.6 1.4 4 3 3.6 4.6 4.5 3.3 ... #>  $ concreteness: num  2.8 3 4.2 1.9 4 3.7 4.4 3.6 3.4 3.4 ... #>  $ letters     : int  5 4 6 5 5 7 6 6 5 6 ... #>  $ frequency   : int  7 216 25 1815 296 53 28 13 18 72 ... #>  $ foa         : num  -27.6 -23.4 -32.4 -28.5 -29.4 -35.3 -30.5 -34 -28.2 -32.3 ... #>  $ soa         : num  -24.5 -18.4 -30.8 -23 -22.2 -32.3 -28.9 -38.2 -22.1 -32.5 ... #>  $ onr         : num  0.09 0.96 0.93 1 0.99 1 0.88 1 0.86 0.89 ... #>  $ dictcode    : Factor w/ 49 levels \"1\",\"2\",\"3\",\"4\",..: 2 3 3 4 5 1 3 2 9 2 ... #>  $ noun        : int  0 0 0 0 0 100 0 0 32 0 ... #>  $ canadian    : Factor w/ 2 levels \"0\",\"1\": 1 1 1 1 1 1 1 1 1 1 ... summary(TWP) #>      itmno            word              imagery       concreteness   #>  Min.   :   1.0   Length:1093        Min.   :1.200   Min.   :1.600   #>  1st Qu.: 271.0   Class :character   1st Qu.:3.000   1st Qu.:3.200   #>  Median : 540.0   Mode  :character   Median :4.100   Median :4.000   #>  Mean   : 540.3                      Mean   :4.197   Mean   :4.342   #>  3rd Qu.: 809.0                      3rd Qu.:5.400   3rd Qu.:5.500   #>  Max.   :1080.0                      Max.   :6.800   Max.   :7.000   #>                                                                      #>     letters       frequency            foa              soa         #>  Min.   :3.00   Min.   :   0.00   Min.   :-48.60   Min.   :-46.50   #>  1st Qu.:6.00   1st Qu.:  12.50   1st Qu.:-36.80   1st Qu.:-32.20   #>  Median :6.00   Median :  30.00   Median :-33.20   Median :-29.00   #>  Mean   :6.27   Mean   :  75.45   Mean   :-33.47   Mean   :-29.18   #>  3rd Qu.:7.00   3rd Qu.:  72.00   3rd Qu.:-30.20   3rd Qu.:-25.90   #>  Max.   :8.00   Max.   :1815.00   Max.   :-18.90   Max.   :-17.00   #>                 NA's   :6                                           #>       onr            dictcode        noun        canadian #>  Min.   :0.0000   1      :253   Min.   :  0.00   0:1080   #>  1st Qu.:0.6500   12     :211   1st Qu.:  0.00   1:  13   #>  Median :0.9900   2      :155   Median : 39.00            #>  Mean   :0.7987   3      :101   Mean   : 47.11            #>  3rd Qu.:1.0000   21     :100   3rd Qu.:100.00            #>  Max.   :1.0000   4      : 61   Max.   :100.00            #>  NA's   :7        (Other):212   NA's   :118               # quick view of distributions boxplot(scale(TWP[, 3:9]))   plotDensity(TWP, \"imagery\")  plotDensity(TWP, \"concreteness\")  plotDensity(TWP, \"frequency\")   # select low imagery, concreteness and frequency words R <- list(imagery=c(1,5), concreteness=c(1,4), frequency=c(0,30)) pickList(TWP, R) #>      list itmno     word imagery concreteness letters frequency   foa   soa #> 1037    1  1037   virtue     3.1          2.1       6        30 -32.7 -33.2 #> 493     1   493   humble     4.0          2.6       6        18 -35.1 -30.2 #> 78      1    78   assist     2.9          3.9       6        26 -29.3 -25.6 #> 1033    1  1033  venture     3.4          3.6       7        19 -36.1 -29.0 #> 877     1   877 scarcely     2.2          2.9       8        24 -42.2 -36.1 #> 969     1   969 surround     3.9          3.9       8         5 -41.8 -33.7 #> 950     1   950   stupid     4.8          3.5       6        24 -33.3 -29.5 #> 732     1   732 perceive     3.3          2.7       8        13 -41.2 -35.3 #> 212     1   212 complain     4.6          3.8       8        11 -42.6 -32.7 #> 382     1   382   expose     4.1          3.2       6         8 -34.8 -28.8 #>       onr dictcode noun canadian #> 1037 1.00        1  100        0 #> 493  0.55       32    0        0 #> 78   1.00       21   NA        0 #> 1033 0.90       21   19        0 #> 877  1.00        4    0        0 #> 969  1.00       21   12        0 #> 950  1.00       31   NA        0 #> 732  1.00        2    0        0 #> 212  1.00        2    0        0 #> 382  1.00       21    3        0  # dplyr now makes this much more flexible if (require(dplyr)) {   # select items within given ranges   selected <- TWP |>       filter( canadian == 0) |>              # remove Canadian spellings     filter( imagery <= 5, concreteness <= 4, frequency <= 30) |>     select(word, imagery:frequency )        str(selected)      # get random samples of selected items   nitems <- 5   nlists <- 2   lists <- selected |>     sample_n( nitems*nlists, replace=FALSE) |>     mutate(list = rep(1:nlists, each=nitems))      str(lists)   lists } #> Loading required package: dplyr #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union #> 'data.frame':\t269 obs. of  5 variables: #>  $ word        : chr  \"abide\" \"absorb\" \"abuse\" \"accord\" ... #>  $ imagery     : num  2 4.6 4.5 1.8 4.2 2.1 3.7 3.2 3.3 1.6 ... #>  $ concreteness: num  2.8 3.6 3.4 2.6 3.5 3.6 3 3.9 3.5 2 ... #>  $ letters     : int  5 6 5 6 6 8 6 5 6 4 ... #>  $ frequency   : int  7 13 18 9 10 3 10 13 10 10 ... #> 'data.frame':\t10 obs. of  6 variables: #>  $ word        : chr  \"splendid\" \"ascend\" \"consent\" \"cunning\" ... #>  $ imagery     : num  3 3.6 2.8 2.9 4.4 3.5 2.2 1.9 3 4.1 #>  $ concreteness: num  3 3.4 3.6 2.8 3.4 3.9 2.7 3 3.9 2.8 #>  $ letters     : int  8 6 7 7 5 6 5 6 8 8 #>  $ frequency   : int  20 1 17 5 17 14 16 13 3 21 #>  $ list        : int  1 1 1 1 1 2 2 2 2 2 #>        word imagery concreteness letters frequency list #> 1  splendid     3.0          3.0       8        20    1 #> 2    ascend     3.6          3.4       6         1    1 #> 3   consent     2.8          3.6       7        17    1 #> 4   cunning     2.9          2.8       7         5    1 #> 5     weary     4.4          3.4       5        17    1 #> 6    attach     3.5          3.9       6        14    2 #> 7     ample     2.2          2.7       5        16    2 #> 8    convey     1.9          3.0       6        13    2 #> 9  commence     3.0          3.9       8         3    2 #> 10 helpless     4.1          2.8       8        21    2"},{"path":"https://friendly.github.io/WordPools/reference/within.html","id":null,"dir":"Reference","previous_headings":"","what":"Select observations within a given range — within","title":"Select observations within a given range — within","text":"function masks `base::within` longer exported. Eventually removed.","code":""},{"path":"https://friendly.github.io/WordPools/reference/within.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select observations within a given range — within","text":"","code":"within(x, a, b)"},{"path":"https://friendly.github.io/WordPools/reference/within.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select observations within a given range — within","text":"x vector Lower limit b Upper limit","code":""},{"path":"https://friendly.github.io/WordPools/reference/within.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select observations within a given range — within","text":"logical vector length x","code":""},{"path":"https://friendly.github.io/WordPools/reference/within.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select observations within a given range — within","text":"","code":"WordPools:::within(1:10, 2, 5) #>  [1] FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE"},{"path":"https://friendly.github.io/WordPools/reference/WordPools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Word Pools Used in Studies of Learning and Memory — WordPools-package","title":"Word Pools Used in Studies of Learning and Memory — WordPools-package","text":"package collects several classical word pools used often provide lists words psychological studies learning memory. word pool consists population words, together various descriptive measures (number letters, number syllables, word frequency, etc.)  normative measures (imagery, concreteness, etc.) can used experimental designs vary control factors.","code":""},{"path":"https://friendly.github.io/WordPools/reference/WordPools-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Word Pools Used in Studies of Learning and Memory — WordPools-package","text":"present, package contains three main word pools: Paivio - Paivio etal. (1968) word list 925 nouns TWP - Friendly etal. (1982) Toronto Word Pool 1080 words various grammatical classes Battig - Battig & Montague (1969) Categorized Word Norms, containing 5231 words listed  56 taxonomic categories.  Various measures categories given CatProp. addition, function pickList provides ability select items lists restrictions ranges measured variables.","code":""},{"path":"https://friendly.github.io/WordPools/reference/WordPools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Word Pools Used in Studies of Learning and Memory — WordPools-package","text":"Michael Friendly Maintainer: Michael Friendly <friendly@yorku.ca>","code":""},{"path":"https://friendly.github.io/WordPools/reference/WordPools-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Word Pools Used in Studies of Learning and Memory — WordPools-package","text":"Paivio, ., Yuille, J.C. & Madigan S. Concreteness, imagery meaningfulness 925 nouns.  Journal Experimental Psychology, Monograph Supplement, 1968, 76, .1, pt.2. Battig, W.F.  & Montague, W.E. (1969).     Category norms verbal items 56 categories: replication extension Connecticut norms.     Journal Experimental Psychology, 80 (1969), pp. 1-46 Friendly, M., Franklin, P., Hoffman, D. & Rubin, D. Toronto Word Pool, Behavior Research Methods Instrumentation, 1982, 14(4), 375-399. http://datavis.ca/papers/twp.pdf. Friendly, M. (2006) Word list generator. http://datavis.ca/online/paivio/ Rubin, D. C. & Friendly, M. (1986). Predicting words get recalled: Measures free recall, availability, goodness, emotionality, pronunciability 925 nouns. Memory Cognition, 14, 79-94. See also http://memory.psych.upenn.edu/Word_Pools  related word pools","code":""},{"path":"https://friendly.github.io/WordPools/news/index.html","id":"wordpools-120","dir":"Changelog","previous_headings":"","what":"WordPools 1.2.0","title":"WordPools 1.2.0","text":"CRAN release: 2023-08-08 minor update, largely assure adherence current CRAN policies update examples.","code":""},{"path":"https://friendly.github.io/WordPools/news/index.html","id":"wordpools-11-2","dir":"Changelog","previous_headings":"","what":"WordPools 1.1-2","title":"WordPools 1.1-2","text":"Add Matt Dubins contributor Add link Paivio shiny app","code":""},{"path":"https://friendly.github.io/WordPools/news/index.html","id":"wordpools-11-1","dir":"Changelog","previous_headings":"","what":"WordPools 1.1-1","title":"WordPools 1.1-1","text":"CRAN release: 2018-12-15 Added NEWS.md file track changes package.","code":""}]
